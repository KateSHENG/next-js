import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import {SideMenu} from '@/_ui/SideMenu'
import {AppNavbar} from '@/_ui/appBar';
import {Header} from '@/_ui/header';
import {Footer} from '@/_ui/footer'
import { getSession } from "@/lib/lib";
import { AppRouterCacheProvider } from '@mui/material-nextjs/v14-appRouter';
import theme from '@/app/theme';
import { ThemeProvider } from '@mui/material/styles';
import Provider from '@/app/client-provider'
import Box from '@mui/material/Box';
import Stack from '@mui/material/Stack';
import CssBaseline from '@mui/material/CssBaseline';
const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Kate Test App",
  description: "Generated by Kate",
};

export default async function RootLayout({
  auth,
  children,
}: Readonly<{
  auth: React.ReactNode
  children: React.ReactNode;
}>) {
  const session = await getSession();
  console.log(session['access_token'])
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <AppRouterCacheProvider options={{ enableCssLayer: true }}>
          <ThemeProvider theme={theme}>
            {/* <Provider session={session}> */}
            <CssBaseline enableColorScheme />
              <Box sx={{ display: 'flex' }}>
                <SideMenu />
                <AppNavbar />
                {/* Main content */}
                <Box
                  component="main"
                >
                  <Stack
                    spacing={2}
                    sx={{
                      alignItems: 'center',
                      mx: 3,
                      pb: 5,
                      mt: { xs: 8, md: 0 },
                    }}
                  >
                    <Header />
                    {children}
                  </Stack>
                </Box>
              </Box>
              <div>
              <pre>{JSON.stringify(session, null, 2)}</pre>
            </div>
            {/* </Provider> */}
          </ThemeProvider>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
